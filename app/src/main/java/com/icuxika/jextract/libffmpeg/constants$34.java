// Generated by jextract

package com.icuxika.jextract.libffmpeg;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
final class constants$34 {

    // Suppresses default constructor, ensuring non-instantiability.
    private constants$34() {}
    static final FunctionDescriptor logf$FUNC = FunctionDescriptor.of(Constants$root.C_FLOAT$LAYOUT,
        Constants$root.C_FLOAT$LAYOUT
    );
    static final MethodHandle logf$MH = RuntimeHelper.downcallHandle(
        "logf",
        constants$34.logf$FUNC
    );
    static final FunctionDescriptor modff$FUNC = FunctionDescriptor.of(Constants$root.C_FLOAT$LAYOUT,
        Constants$root.C_FLOAT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle modff$MH = RuntimeHelper.downcallHandle(
        "modff",
        constants$34.modff$FUNC
    );
    static final FunctionDescriptor powf$FUNC = FunctionDescriptor.of(Constants$root.C_FLOAT$LAYOUT,
        Constants$root.C_FLOAT$LAYOUT,
        Constants$root.C_FLOAT$LAYOUT
    );
    static final MethodHandle powf$MH = RuntimeHelper.downcallHandle(
        "powf",
        constants$34.powf$FUNC
    );
    static final FunctionDescriptor sinf$FUNC = FunctionDescriptor.of(Constants$root.C_FLOAT$LAYOUT,
        Constants$root.C_FLOAT$LAYOUT
    );
    static final MethodHandle sinf$MH = RuntimeHelper.downcallHandle(
        "sinf",
        constants$34.sinf$FUNC
    );
    static final FunctionDescriptor sinhf$FUNC = FunctionDescriptor.of(Constants$root.C_FLOAT$LAYOUT,
        Constants$root.C_FLOAT$LAYOUT
    );
    static final MethodHandle sinhf$MH = RuntimeHelper.downcallHandle(
        "sinhf",
        constants$34.sinhf$FUNC
    );
    static final FunctionDescriptor sqrtf$FUNC = FunctionDescriptor.of(Constants$root.C_FLOAT$LAYOUT,
        Constants$root.C_FLOAT$LAYOUT
    );
    static final MethodHandle sqrtf$MH = RuntimeHelper.downcallHandle(
        "sqrtf",
        constants$34.sqrtf$FUNC
    );
}


