// Generated by jextract

package com.icuxika.jextract.libffmpeg;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
/**
 * {@snippet :
 * struct AVCodec {
 *     char* name;
 *     char* long_name;
 *     enum AVMediaType type;
 *     enum AVCodecID id;
 *     int capabilities;
 *     uint8_t max_lowres;
 *     const AVRational* supported_framerates;
 *     enum AVPixelFormat* pix_fmts;
 *     int* supported_samplerates;
 *     enum AVSampleFormat* sample_fmts;
 *     const uint64_t* channel_layouts;
 *     const AVClass* priv_class;
 *     const AVProfile* profiles;
 *     char* wrapper_name;
 *     const AVChannelLayout* ch_layouts;
 * };
 * }
 */
public class AVCodec {

    static final StructLayout $struct$LAYOUT = MemoryLayout.structLayout(
        Constants$root.C_POINTER$LAYOUT.withName("name"),
        Constants$root.C_POINTER$LAYOUT.withName("long_name"),
        Constants$root.C_LONG$LAYOUT.withName("type"),
        Constants$root.C_LONG$LAYOUT.withName("id"),
        Constants$root.C_LONG$LAYOUT.withName("capabilities"),
        Constants$root.C_CHAR$LAYOUT.withName("max_lowres"),
        MemoryLayout.paddingLayout(24),
        Constants$root.C_POINTER$LAYOUT.withName("supported_framerates"),
        Constants$root.C_POINTER$LAYOUT.withName("pix_fmts"),
        Constants$root.C_POINTER$LAYOUT.withName("supported_samplerates"),
        Constants$root.C_POINTER$LAYOUT.withName("sample_fmts"),
        Constants$root.C_POINTER$LAYOUT.withName("channel_layouts"),
        Constants$root.C_POINTER$LAYOUT.withName("priv_class"),
        Constants$root.C_POINTER$LAYOUT.withName("profiles"),
        Constants$root.C_POINTER$LAYOUT.withName("wrapper_name"),
        Constants$root.C_POINTER$LAYOUT.withName("ch_layouts")
    ).withName("AVCodec");
    public static MemoryLayout $LAYOUT() {
        return AVCodec.$struct$LAYOUT;
    }
    static final VarHandle name$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("name"));
    public static VarHandle name$VH() {
        return AVCodec.name$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * char* name;
     * }
     */
    public static MemorySegment name$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)AVCodec.name$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * char* name;
     * }
     */
    public static void name$set(MemorySegment seg, MemorySegment x) {
        AVCodec.name$VH.set(seg, x);
    }
    public static MemorySegment name$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)AVCodec.name$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void name$set(MemorySegment seg, long index, MemorySegment x) {
        AVCodec.name$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle long_name$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("long_name"));
    public static VarHandle long_name$VH() {
        return AVCodec.long_name$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * char* long_name;
     * }
     */
    public static MemorySegment long_name$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)AVCodec.long_name$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * char* long_name;
     * }
     */
    public static void long_name$set(MemorySegment seg, MemorySegment x) {
        AVCodec.long_name$VH.set(seg, x);
    }
    public static MemorySegment long_name$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)AVCodec.long_name$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void long_name$set(MemorySegment seg, long index, MemorySegment x) {
        AVCodec.long_name$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle type$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("type"));
    public static VarHandle type$VH() {
        return AVCodec.type$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * enum AVMediaType type;
     * }
     */
    public static int type$get(MemorySegment seg) {
        return (int)AVCodec.type$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * enum AVMediaType type;
     * }
     */
    public static void type$set(MemorySegment seg, int x) {
        AVCodec.type$VH.set(seg, x);
    }
    public static int type$get(MemorySegment seg, long index) {
        return (int)AVCodec.type$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void type$set(MemorySegment seg, long index, int x) {
        AVCodec.type$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle id$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("id"));
    public static VarHandle id$VH() {
        return AVCodec.id$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * enum AVCodecID id;
     * }
     */
    public static int id$get(MemorySegment seg) {
        return (int)AVCodec.id$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * enum AVCodecID id;
     * }
     */
    public static void id$set(MemorySegment seg, int x) {
        AVCodec.id$VH.set(seg, x);
    }
    public static int id$get(MemorySegment seg, long index) {
        return (int)AVCodec.id$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void id$set(MemorySegment seg, long index, int x) {
        AVCodec.id$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle capabilities$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("capabilities"));
    public static VarHandle capabilities$VH() {
        return AVCodec.capabilities$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * int capabilities;
     * }
     */
    public static int capabilities$get(MemorySegment seg) {
        return (int)AVCodec.capabilities$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * int capabilities;
     * }
     */
    public static void capabilities$set(MemorySegment seg, int x) {
        AVCodec.capabilities$VH.set(seg, x);
    }
    public static int capabilities$get(MemorySegment seg, long index) {
        return (int)AVCodec.capabilities$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void capabilities$set(MemorySegment seg, long index, int x) {
        AVCodec.capabilities$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle max_lowres$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("max_lowres"));
    public static VarHandle max_lowres$VH() {
        return AVCodec.max_lowres$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * uint8_t max_lowres;
     * }
     */
    public static byte max_lowres$get(MemorySegment seg) {
        return (byte)AVCodec.max_lowres$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * uint8_t max_lowres;
     * }
     */
    public static void max_lowres$set(MemorySegment seg, byte x) {
        AVCodec.max_lowres$VH.set(seg, x);
    }
    public static byte max_lowres$get(MemorySegment seg, long index) {
        return (byte)AVCodec.max_lowres$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void max_lowres$set(MemorySegment seg, long index, byte x) {
        AVCodec.max_lowres$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle supported_framerates$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("supported_framerates"));
    public static VarHandle supported_framerates$VH() {
        return AVCodec.supported_framerates$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * const AVRational* supported_framerates;
     * }
     */
    public static MemorySegment supported_framerates$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)AVCodec.supported_framerates$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * const AVRational* supported_framerates;
     * }
     */
    public static void supported_framerates$set(MemorySegment seg, MemorySegment x) {
        AVCodec.supported_framerates$VH.set(seg, x);
    }
    public static MemorySegment supported_framerates$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)AVCodec.supported_framerates$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void supported_framerates$set(MemorySegment seg, long index, MemorySegment x) {
        AVCodec.supported_framerates$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle pix_fmts$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("pix_fmts"));
    public static VarHandle pix_fmts$VH() {
        return AVCodec.pix_fmts$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * enum AVPixelFormat* pix_fmts;
     * }
     */
    public static MemorySegment pix_fmts$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)AVCodec.pix_fmts$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * enum AVPixelFormat* pix_fmts;
     * }
     */
    public static void pix_fmts$set(MemorySegment seg, MemorySegment x) {
        AVCodec.pix_fmts$VH.set(seg, x);
    }
    public static MemorySegment pix_fmts$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)AVCodec.pix_fmts$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void pix_fmts$set(MemorySegment seg, long index, MemorySegment x) {
        AVCodec.pix_fmts$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle supported_samplerates$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("supported_samplerates"));
    public static VarHandle supported_samplerates$VH() {
        return AVCodec.supported_samplerates$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * int* supported_samplerates;
     * }
     */
    public static MemorySegment supported_samplerates$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)AVCodec.supported_samplerates$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * int* supported_samplerates;
     * }
     */
    public static void supported_samplerates$set(MemorySegment seg, MemorySegment x) {
        AVCodec.supported_samplerates$VH.set(seg, x);
    }
    public static MemorySegment supported_samplerates$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)AVCodec.supported_samplerates$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void supported_samplerates$set(MemorySegment seg, long index, MemorySegment x) {
        AVCodec.supported_samplerates$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle sample_fmts$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("sample_fmts"));
    public static VarHandle sample_fmts$VH() {
        return AVCodec.sample_fmts$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * enum AVSampleFormat* sample_fmts;
     * }
     */
    public static MemorySegment sample_fmts$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)AVCodec.sample_fmts$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * enum AVSampleFormat* sample_fmts;
     * }
     */
    public static void sample_fmts$set(MemorySegment seg, MemorySegment x) {
        AVCodec.sample_fmts$VH.set(seg, x);
    }
    public static MemorySegment sample_fmts$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)AVCodec.sample_fmts$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void sample_fmts$set(MemorySegment seg, long index, MemorySegment x) {
        AVCodec.sample_fmts$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle channel_layouts$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("channel_layouts"));
    public static VarHandle channel_layouts$VH() {
        return AVCodec.channel_layouts$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * const uint64_t* channel_layouts;
     * }
     */
    public static MemorySegment channel_layouts$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)AVCodec.channel_layouts$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * const uint64_t* channel_layouts;
     * }
     */
    public static void channel_layouts$set(MemorySegment seg, MemorySegment x) {
        AVCodec.channel_layouts$VH.set(seg, x);
    }
    public static MemorySegment channel_layouts$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)AVCodec.channel_layouts$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void channel_layouts$set(MemorySegment seg, long index, MemorySegment x) {
        AVCodec.channel_layouts$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle priv_class$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("priv_class"));
    public static VarHandle priv_class$VH() {
        return AVCodec.priv_class$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * const AVClass* priv_class;
     * }
     */
    public static MemorySegment priv_class$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)AVCodec.priv_class$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * const AVClass* priv_class;
     * }
     */
    public static void priv_class$set(MemorySegment seg, MemorySegment x) {
        AVCodec.priv_class$VH.set(seg, x);
    }
    public static MemorySegment priv_class$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)AVCodec.priv_class$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void priv_class$set(MemorySegment seg, long index, MemorySegment x) {
        AVCodec.priv_class$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle profiles$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("profiles"));
    public static VarHandle profiles$VH() {
        return AVCodec.profiles$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * const AVProfile* profiles;
     * }
     */
    public static MemorySegment profiles$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)AVCodec.profiles$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * const AVProfile* profiles;
     * }
     */
    public static void profiles$set(MemorySegment seg, MemorySegment x) {
        AVCodec.profiles$VH.set(seg, x);
    }
    public static MemorySegment profiles$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)AVCodec.profiles$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void profiles$set(MemorySegment seg, long index, MemorySegment x) {
        AVCodec.profiles$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle wrapper_name$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("wrapper_name"));
    public static VarHandle wrapper_name$VH() {
        return AVCodec.wrapper_name$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * char* wrapper_name;
     * }
     */
    public static MemorySegment wrapper_name$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)AVCodec.wrapper_name$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * char* wrapper_name;
     * }
     */
    public static void wrapper_name$set(MemorySegment seg, MemorySegment x) {
        AVCodec.wrapper_name$VH.set(seg, x);
    }
    public static MemorySegment wrapper_name$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)AVCodec.wrapper_name$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void wrapper_name$set(MemorySegment seg, long index, MemorySegment x) {
        AVCodec.wrapper_name$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle ch_layouts$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("ch_layouts"));
    public static VarHandle ch_layouts$VH() {
        return AVCodec.ch_layouts$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * const AVChannelLayout* ch_layouts;
     * }
     */
    public static MemorySegment ch_layouts$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)AVCodec.ch_layouts$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * const AVChannelLayout* ch_layouts;
     * }
     */
    public static void ch_layouts$set(MemorySegment seg, MemorySegment x) {
        AVCodec.ch_layouts$VH.set(seg, x);
    }
    public static MemorySegment ch_layouts$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)AVCodec.ch_layouts$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void ch_layouts$set(MemorySegment seg, long index, MemorySegment x) {
        AVCodec.ch_layouts$VH.set(seg.asSlice(index*sizeof()), x);
    }
    public static long sizeof() { return $LAYOUT().byteSize(); }
    public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
    public static MemorySegment allocateArray(long len, SegmentAllocator allocator) {
        return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
    }
    public static MemorySegment ofAddress(MemorySegment addr, SegmentScope scope) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, scope); }
}


