// Generated by jextract

package com.icuxika.jextract.libffmpeg;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
/**
 * {@snippet :
 * struct AVChapter {
 *     int64_t id;
 *     AVRational time_base;
 *     int64_t start;
 *     int64_t end;
 *     AVDictionary* metadata;
 * };
 * }
 */
public class AVChapter {

    static final StructLayout $struct$LAYOUT = MemoryLayout.structLayout(
        Constants$root.C_LONG_LONG$LAYOUT.withName("id"),
        MemoryLayout.structLayout(
            Constants$root.C_LONG$LAYOUT.withName("num"),
            Constants$root.C_LONG$LAYOUT.withName("den")
        ).withName("time_base"),
        Constants$root.C_LONG_LONG$LAYOUT.withName("start"),
        Constants$root.C_LONG_LONG$LAYOUT.withName("end"),
        Constants$root.C_POINTER$LAYOUT.withName("metadata")
    ).withName("AVChapter");
    public static MemoryLayout $LAYOUT() {
        return AVChapter.$struct$LAYOUT;
    }
    static final VarHandle id$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("id"));
    public static VarHandle id$VH() {
        return AVChapter.id$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * int64_t id;
     * }
     */
    public static long id$get(MemorySegment seg) {
        return (long)AVChapter.id$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * int64_t id;
     * }
     */
    public static void id$set(MemorySegment seg, long x) {
        AVChapter.id$VH.set(seg, x);
    }
    public static long id$get(MemorySegment seg, long index) {
        return (long)AVChapter.id$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void id$set(MemorySegment seg, long index, long x) {
        AVChapter.id$VH.set(seg.asSlice(index*sizeof()), x);
    }
    public static MemorySegment time_base$slice(MemorySegment seg) {
        return seg.asSlice(8, 8);
    }
    static final VarHandle start$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("start"));
    public static VarHandle start$VH() {
        return AVChapter.start$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * int64_t start;
     * }
     */
    public static long start$get(MemorySegment seg) {
        return (long)AVChapter.start$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * int64_t start;
     * }
     */
    public static void start$set(MemorySegment seg, long x) {
        AVChapter.start$VH.set(seg, x);
    }
    public static long start$get(MemorySegment seg, long index) {
        return (long)AVChapter.start$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void start$set(MemorySegment seg, long index, long x) {
        AVChapter.start$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle end$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("end"));
    public static VarHandle end$VH() {
        return AVChapter.end$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * int64_t end;
     * }
     */
    public static long end$get(MemorySegment seg) {
        return (long)AVChapter.end$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * int64_t end;
     * }
     */
    public static void end$set(MemorySegment seg, long x) {
        AVChapter.end$VH.set(seg, x);
    }
    public static long end$get(MemorySegment seg, long index) {
        return (long)AVChapter.end$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void end$set(MemorySegment seg, long index, long x) {
        AVChapter.end$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle metadata$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("metadata"));
    public static VarHandle metadata$VH() {
        return AVChapter.metadata$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * AVDictionary* metadata;
     * }
     */
    public static MemorySegment metadata$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)AVChapter.metadata$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * AVDictionary* metadata;
     * }
     */
    public static void metadata$set(MemorySegment seg, MemorySegment x) {
        AVChapter.metadata$VH.set(seg, x);
    }
    public static MemorySegment metadata$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)AVChapter.metadata$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void metadata$set(MemorySegment seg, long index, MemorySegment x) {
        AVChapter.metadata$VH.set(seg.asSlice(index*sizeof()), x);
    }
    public static long sizeof() { return $LAYOUT().byteSize(); }
    public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
    public static MemorySegment allocateArray(long len, SegmentAllocator allocator) {
        return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
    }
    public static MemorySegment ofAddress(MemorySegment addr, SegmentScope scope) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, scope); }
}


