// Generated by jextract

package com.icuxika.jextract.libffmpeg;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
final class constants$23 {

    // Suppresses default constructor, ensuring non-instantiability.
    private constants$23() {}
    static final FunctionDescriptor rint$FUNC = FunctionDescriptor.of(Constants$root.C_DOUBLE$LAYOUT,
        Constants$root.C_DOUBLE$LAYOUT
    );
    static final MethodHandle rint$MH = RuntimeHelper.downcallHandle(
        "rint",
        constants$23.rint$FUNC
    );
    static final FunctionDescriptor round$FUNC = FunctionDescriptor.of(Constants$root.C_DOUBLE$LAYOUT,
        Constants$root.C_DOUBLE$LAYOUT
    );
    static final MethodHandle round$MH = RuntimeHelper.downcallHandle(
        "round",
        constants$23.round$FUNC
    );
    static final FunctionDescriptor scalbln$FUNC = FunctionDescriptor.of(Constants$root.C_DOUBLE$LAYOUT,
        Constants$root.C_DOUBLE$LAYOUT,
        Constants$root.C_LONG$LAYOUT
    );
    static final MethodHandle scalbln$MH = RuntimeHelper.downcallHandle(
        "scalbln",
        constants$23.scalbln$FUNC
    );
    static final FunctionDescriptor scalbn$FUNC = FunctionDescriptor.of(Constants$root.C_DOUBLE$LAYOUT,
        Constants$root.C_DOUBLE$LAYOUT,
        Constants$root.C_LONG$LAYOUT
    );
    static final MethodHandle scalbn$MH = RuntimeHelper.downcallHandle(
        "scalbn",
        constants$23.scalbn$FUNC
    );
    static final FunctionDescriptor tgamma$FUNC = FunctionDescriptor.of(Constants$root.C_DOUBLE$LAYOUT,
        Constants$root.C_DOUBLE$LAYOUT
    );
    static final MethodHandle tgamma$MH = RuntimeHelper.downcallHandle(
        "tgamma",
        constants$23.tgamma$FUNC
    );
    static final FunctionDescriptor trunc$FUNC = FunctionDescriptor.of(Constants$root.C_DOUBLE$LAYOUT,
        Constants$root.C_DOUBLE$LAYOUT
    );
    static final MethodHandle trunc$MH = RuntimeHelper.downcallHandle(
        "trunc",
        constants$23.trunc$FUNC
    );
}


