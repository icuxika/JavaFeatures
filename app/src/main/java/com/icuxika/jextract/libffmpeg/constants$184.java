// Generated by jextract

package com.icuxika.jextract.libffmpeg;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
final class constants$184 {

    // Suppresses default constructor, ensuring non-instantiability.
    private constants$184() {}
    static final FunctionDescriptor av_stream_get_end_pts$FUNC = FunctionDescriptor.of(Constants$root.C_LONG_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle av_stream_get_end_pts$MH = RuntimeHelper.downcallHandle(
        "av_stream_get_end_pts",
        constants$184.av_stream_get_end_pts$FUNC
    );
    static final FunctionDescriptor av_format_control_message$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG_LONG$LAYOUT
    );
    static final FunctionDescriptor av_format_control_message_UP$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG_LONG$LAYOUT
    );
    static final MethodHandle av_format_control_message_UP$MH = RuntimeHelper.upcallHandle(av_format_control_message.class, "apply", constants$184.av_format_control_message_UP$FUNC);
    static final FunctionDescriptor av_format_control_message_DOWN$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG_LONG$LAYOUT
    );
    static final MethodHandle av_format_control_message_DOWN$MH = RuntimeHelper.downcallHandle(
        constants$184.av_format_control_message_DOWN$FUNC
    );
    static final FunctionDescriptor AVOpenCallback$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final FunctionDescriptor AVOpenCallback_UP$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle AVOpenCallback_UP$MH = RuntimeHelper.upcallHandle(AVOpenCallback.class, "apply", constants$184.AVOpenCallback_UP$FUNC);
    static final FunctionDescriptor AVOpenCallback_DOWN$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle AVOpenCallback_DOWN$MH = RuntimeHelper.downcallHandle(
        constants$184.AVOpenCallback_DOWN$FUNC
    );
    static final FunctionDescriptor av_format_inject_global_side_data$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle av_format_inject_global_side_data$MH = RuntimeHelper.downcallHandle(
        "av_format_inject_global_side_data",
        constants$184.av_format_inject_global_side_data$FUNC
    );
}


