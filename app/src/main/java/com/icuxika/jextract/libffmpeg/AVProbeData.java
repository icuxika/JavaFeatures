// Generated by jextract

package com.icuxika.jextract.libffmpeg;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
/**
 * {@snippet :
 * struct AVProbeData {
 *     char* filename;
 *     unsigned char* buf;
 *     int buf_size;
 *     char* mime_type;
 * };
 * }
 */
public class AVProbeData {

    static final StructLayout $struct$LAYOUT = MemoryLayout.structLayout(
        Constants$root.C_POINTER$LAYOUT.withName("filename"),
        Constants$root.C_POINTER$LAYOUT.withName("buf"),
        Constants$root.C_LONG$LAYOUT.withName("buf_size"),
        MemoryLayout.paddingLayout(32),
        Constants$root.C_POINTER$LAYOUT.withName("mime_type")
    ).withName("AVProbeData");
    public static MemoryLayout $LAYOUT() {
        return AVProbeData.$struct$LAYOUT;
    }
    static final VarHandle filename$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("filename"));
    public static VarHandle filename$VH() {
        return AVProbeData.filename$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * char* filename;
     * }
     */
    public static MemorySegment filename$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)AVProbeData.filename$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * char* filename;
     * }
     */
    public static void filename$set(MemorySegment seg, MemorySegment x) {
        AVProbeData.filename$VH.set(seg, x);
    }
    public static MemorySegment filename$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)AVProbeData.filename$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void filename$set(MemorySegment seg, long index, MemorySegment x) {
        AVProbeData.filename$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle buf$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("buf"));
    public static VarHandle buf$VH() {
        return AVProbeData.buf$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * unsigned char* buf;
     * }
     */
    public static MemorySegment buf$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)AVProbeData.buf$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * unsigned char* buf;
     * }
     */
    public static void buf$set(MemorySegment seg, MemorySegment x) {
        AVProbeData.buf$VH.set(seg, x);
    }
    public static MemorySegment buf$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)AVProbeData.buf$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void buf$set(MemorySegment seg, long index, MemorySegment x) {
        AVProbeData.buf$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle buf_size$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("buf_size"));
    public static VarHandle buf_size$VH() {
        return AVProbeData.buf_size$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * int buf_size;
     * }
     */
    public static int buf_size$get(MemorySegment seg) {
        return (int)AVProbeData.buf_size$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * int buf_size;
     * }
     */
    public static void buf_size$set(MemorySegment seg, int x) {
        AVProbeData.buf_size$VH.set(seg, x);
    }
    public static int buf_size$get(MemorySegment seg, long index) {
        return (int)AVProbeData.buf_size$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void buf_size$set(MemorySegment seg, long index, int x) {
        AVProbeData.buf_size$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle mime_type$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("mime_type"));
    public static VarHandle mime_type$VH() {
        return AVProbeData.mime_type$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * char* mime_type;
     * }
     */
    public static MemorySegment mime_type$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)AVProbeData.mime_type$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * char* mime_type;
     * }
     */
    public static void mime_type$set(MemorySegment seg, MemorySegment x) {
        AVProbeData.mime_type$VH.set(seg, x);
    }
    public static MemorySegment mime_type$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)AVProbeData.mime_type$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void mime_type$set(MemorySegment seg, long index, MemorySegment x) {
        AVProbeData.mime_type$VH.set(seg.asSlice(index*sizeof()), x);
    }
    public static long sizeof() { return $LAYOUT().byteSize(); }
    public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
    public static MemorySegment allocateArray(long len, SegmentAllocator allocator) {
        return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
    }
    public static MemorySegment ofAddress(MemorySegment addr, SegmentScope scope) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, scope); }
}


