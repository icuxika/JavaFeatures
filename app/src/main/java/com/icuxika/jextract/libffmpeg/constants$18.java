// Generated by jextract

package com.icuxika.jextract.libffmpeg;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
final class constants$18 {

    // Suppresses default constructor, ensuring non-instantiability.
    private constants$18() {}
    static final FunctionDescriptor _copysign$FUNC = FunctionDescriptor.of(Constants$root.C_DOUBLE$LAYOUT,
        Constants$root.C_DOUBLE$LAYOUT,
        Constants$root.C_DOUBLE$LAYOUT
    );
    static final MethodHandle _copysign$MH = RuntimeHelper.downcallHandle(
        "_copysign",
        constants$18._copysign$FUNC
    );
    static final FunctionDescriptor erf$FUNC = FunctionDescriptor.of(Constants$root.C_DOUBLE$LAYOUT,
        Constants$root.C_DOUBLE$LAYOUT
    );
    static final MethodHandle erf$MH = RuntimeHelper.downcallHandle(
        "erf",
        constants$18.erf$FUNC
    );
    static final FunctionDescriptor erfc$FUNC = FunctionDescriptor.of(Constants$root.C_DOUBLE$LAYOUT,
        Constants$root.C_DOUBLE$LAYOUT
    );
    static final MethodHandle erfc$MH = RuntimeHelper.downcallHandle(
        "erfc",
        constants$18.erfc$FUNC
    );
    static final FunctionDescriptor exp2$FUNC = FunctionDescriptor.of(Constants$root.C_DOUBLE$LAYOUT,
        Constants$root.C_DOUBLE$LAYOUT
    );
    static final MethodHandle exp2$MH = RuntimeHelper.downcallHandle(
        "exp2",
        constants$18.exp2$FUNC
    );
    static final FunctionDescriptor expm1$FUNC = FunctionDescriptor.of(Constants$root.C_DOUBLE$LAYOUT,
        Constants$root.C_DOUBLE$LAYOUT
    );
    static final MethodHandle expm1$MH = RuntimeHelper.downcallHandle(
        "expm1",
        constants$18.expm1$FUNC
    );
    static final FunctionDescriptor fdim$FUNC = FunctionDescriptor.of(Constants$root.C_DOUBLE$LAYOUT,
        Constants$root.C_DOUBLE$LAYOUT,
        Constants$root.C_DOUBLE$LAYOUT
    );
    static final MethodHandle fdim$MH = RuntimeHelper.downcallHandle(
        "fdim",
        constants$18.fdim$FUNC
    );
}


