// Generated by jextract

package com.icuxika.jextract.libffmpeg;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
final class constants$101 {

    // Suppresses default constructor, ensuring non-instantiability.
    private constants$101() {}
    static final FunctionDescriptor wcsncat_s$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG_LONG$LAYOUT
    );
    static final MethodHandle wcsncat_s$MH = RuntimeHelper.downcallHandle(
        "wcsncat_s",
        constants$101.wcsncat_s$FUNC
    );
    static final FunctionDescriptor wcsncpy_s$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG_LONG$LAYOUT
    );
    static final MethodHandle wcsncpy_s$MH = RuntimeHelper.downcallHandle(
        "wcsncpy_s",
        constants$101.wcsncpy_s$FUNC
    );
    static final FunctionDescriptor wcstok_s$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle wcstok_s$MH = RuntimeHelper.downcallHandle(
        "wcstok_s",
        constants$101.wcstok_s$FUNC
    );
    static final FunctionDescriptor _wcsdup$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle _wcsdup$MH = RuntimeHelper.downcallHandle(
        "_wcsdup",
        constants$101._wcsdup$FUNC
    );
    static final FunctionDescriptor wcscat$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle wcscat$MH = RuntimeHelper.downcallHandle(
        "wcscat",
        constants$101.wcscat$FUNC
    );
    static final FunctionDescriptor wcscmp$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle wcscmp$MH = RuntimeHelper.downcallHandle(
        "wcscmp",
        constants$101.wcscmp$FUNC
    );
}


