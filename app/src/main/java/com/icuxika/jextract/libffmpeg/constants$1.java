// Generated by jextract

package com.icuxika.jextract.libffmpeg;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
final class constants$1 {

    // Suppresses default constructor, ensuring non-instantiability.
    private constants$1() {}
    static final FunctionDescriptor av_get_sample_fmt$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle av_get_sample_fmt$MH = RuntimeHelper.downcallHandle(
        "av_get_sample_fmt",
        constants$1.av_get_sample_fmt$FUNC
    );
    static final FunctionDescriptor av_get_alt_sample_fmt$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_LONG$LAYOUT,
        Constants$root.C_LONG$LAYOUT
    );
    static final MethodHandle av_get_alt_sample_fmt$MH = RuntimeHelper.downcallHandle(
        "av_get_alt_sample_fmt",
        constants$1.av_get_alt_sample_fmt$FUNC
    );
    static final FunctionDescriptor av_get_packed_sample_fmt$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_LONG$LAYOUT
    );
    static final MethodHandle av_get_packed_sample_fmt$MH = RuntimeHelper.downcallHandle(
        "av_get_packed_sample_fmt",
        constants$1.av_get_packed_sample_fmt$FUNC
    );
    static final FunctionDescriptor av_get_planar_sample_fmt$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_LONG$LAYOUT
    );
    static final MethodHandle av_get_planar_sample_fmt$MH = RuntimeHelper.downcallHandle(
        "av_get_planar_sample_fmt",
        constants$1.av_get_planar_sample_fmt$FUNC
    );
    static final FunctionDescriptor av_get_sample_fmt_string$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG$LAYOUT,
        Constants$root.C_LONG$LAYOUT
    );
    static final MethodHandle av_get_sample_fmt_string$MH = RuntimeHelper.downcallHandle(
        "av_get_sample_fmt_string",
        constants$1.av_get_sample_fmt_string$FUNC
    );
    static final FunctionDescriptor av_get_bytes_per_sample$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_LONG$LAYOUT
    );
    static final MethodHandle av_get_bytes_per_sample$MH = RuntimeHelper.downcallHandle(
        "av_get_bytes_per_sample",
        constants$1.av_get_bytes_per_sample$FUNC
    );
}


