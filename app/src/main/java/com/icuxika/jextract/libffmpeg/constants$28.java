// Generated by jextract

package com.icuxika.jextract.libffmpeg;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
final class constants$28 {

    // Suppresses default constructor, ensuring non-instantiability.
    private constants$28() {}
    static final FunctionDescriptor llrintf$FUNC = FunctionDescriptor.of(Constants$root.C_LONG_LONG$LAYOUT,
        Constants$root.C_FLOAT$LAYOUT
    );
    static final MethodHandle llrintf$MH = RuntimeHelper.downcallHandle(
        "llrintf",
        constants$28.llrintf$FUNC
    );
    static final FunctionDescriptor llroundf$FUNC = FunctionDescriptor.of(Constants$root.C_LONG_LONG$LAYOUT,
        Constants$root.C_FLOAT$LAYOUT
    );
    static final MethodHandle llroundf$MH = RuntimeHelper.downcallHandle(
        "llroundf",
        constants$28.llroundf$FUNC
    );
    static final FunctionDescriptor log1pf$FUNC = FunctionDescriptor.of(Constants$root.C_FLOAT$LAYOUT,
        Constants$root.C_FLOAT$LAYOUT
    );
    static final MethodHandle log1pf$MH = RuntimeHelper.downcallHandle(
        "log1pf",
        constants$28.log1pf$FUNC
    );
    static final FunctionDescriptor log2f$FUNC = FunctionDescriptor.of(Constants$root.C_FLOAT$LAYOUT,
        Constants$root.C_FLOAT$LAYOUT
    );
    static final MethodHandle log2f$MH = RuntimeHelper.downcallHandle(
        "log2f",
        constants$28.log2f$FUNC
    );
    static final FunctionDescriptor logbf$FUNC = FunctionDescriptor.of(Constants$root.C_FLOAT$LAYOUT,
        Constants$root.C_FLOAT$LAYOUT
    );
    static final MethodHandle logbf$MH = RuntimeHelper.downcallHandle(
        "logbf",
        constants$28.logbf$FUNC
    );
    static final FunctionDescriptor lrintf$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_FLOAT$LAYOUT
    );
    static final MethodHandle lrintf$MH = RuntimeHelper.downcallHandle(
        "lrintf",
        constants$28.lrintf$FUNC
    );
}


