// Generated by jextract

package com.icuxika.jextract.libffmpeg;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
/**
 * {@snippet :
 * struct AVStream {
 *     const AVClass* av_class;
 *     int index;
 *     int id;
 *     AVCodecParameters* codecpar;
 *     void* priv_data;
 *     AVRational time_base;
 *     int64_t start_time;
 *     int64_t duration;
 *     int64_t nb_frames;
 *     int disposition;
 *     enum AVDiscard discard;
 *     AVRational sample_aspect_ratio;
 *     AVDictionary* metadata;
 *     AVRational avg_frame_rate;
 *     AVPacket attached_pic;
 *     AVPacketSideData* side_data;
 *     int nb_side_data;
 *     int event_flags;
 *     AVRational r_frame_rate;
 *     int pts_wrap_bits;
 * };
 * }
 */
public class AVStream {

    static final StructLayout $struct$LAYOUT = MemoryLayout.structLayout(
        Constants$root.C_POINTER$LAYOUT.withName("av_class"),
        Constants$root.C_LONG$LAYOUT.withName("index"),
        Constants$root.C_LONG$LAYOUT.withName("id"),
        Constants$root.C_POINTER$LAYOUT.withName("codecpar"),
        Constants$root.C_POINTER$LAYOUT.withName("priv_data"),
        MemoryLayout.structLayout(
            Constants$root.C_LONG$LAYOUT.withName("num"),
            Constants$root.C_LONG$LAYOUT.withName("den")
        ).withName("time_base"),
        Constants$root.C_LONG_LONG$LAYOUT.withName("start_time"),
        Constants$root.C_LONG_LONG$LAYOUT.withName("duration"),
        Constants$root.C_LONG_LONG$LAYOUT.withName("nb_frames"),
        Constants$root.C_LONG$LAYOUT.withName("disposition"),
        Constants$root.C_LONG$LAYOUT.withName("discard"),
        MemoryLayout.structLayout(
            Constants$root.C_LONG$LAYOUT.withName("num"),
            Constants$root.C_LONG$LAYOUT.withName("den")
        ).withName("sample_aspect_ratio"),
        Constants$root.C_POINTER$LAYOUT.withName("metadata"),
        MemoryLayout.structLayout(
            Constants$root.C_LONG$LAYOUT.withName("num"),
            Constants$root.C_LONG$LAYOUT.withName("den")
        ).withName("avg_frame_rate"),
        MemoryLayout.structLayout(
            Constants$root.C_POINTER$LAYOUT.withName("buf"),
            Constants$root.C_LONG_LONG$LAYOUT.withName("pts"),
            Constants$root.C_LONG_LONG$LAYOUT.withName("dts"),
            Constants$root.C_POINTER$LAYOUT.withName("data"),
            Constants$root.C_LONG$LAYOUT.withName("size"),
            Constants$root.C_LONG$LAYOUT.withName("stream_index"),
            Constants$root.C_LONG$LAYOUT.withName("flags"),
            MemoryLayout.paddingLayout(32),
            Constants$root.C_POINTER$LAYOUT.withName("side_data"),
            Constants$root.C_LONG$LAYOUT.withName("side_data_elems"),
            MemoryLayout.paddingLayout(32),
            Constants$root.C_LONG_LONG$LAYOUT.withName("duration"),
            Constants$root.C_LONG_LONG$LAYOUT.withName("pos"),
            Constants$root.C_POINTER$LAYOUT.withName("opaque"),
            Constants$root.C_POINTER$LAYOUT.withName("opaque_ref"),
            MemoryLayout.structLayout(
                Constants$root.C_LONG$LAYOUT.withName("num"),
                Constants$root.C_LONG$LAYOUT.withName("den")
            ).withName("time_base")
        ).withName("attached_pic"),
        Constants$root.C_POINTER$LAYOUT.withName("side_data"),
        Constants$root.C_LONG$LAYOUT.withName("nb_side_data"),
        Constants$root.C_LONG$LAYOUT.withName("event_flags"),
        MemoryLayout.structLayout(
            Constants$root.C_LONG$LAYOUT.withName("num"),
            Constants$root.C_LONG$LAYOUT.withName("den")
        ).withName("r_frame_rate"),
        Constants$root.C_LONG$LAYOUT.withName("pts_wrap_bits"),
        MemoryLayout.paddingLayout(32)
    ).withName("AVStream");
    public static MemoryLayout $LAYOUT() {
        return AVStream.$struct$LAYOUT;
    }
    static final VarHandle av_class$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("av_class"));
    public static VarHandle av_class$VH() {
        return AVStream.av_class$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * const AVClass* av_class;
     * }
     */
    public static MemorySegment av_class$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)AVStream.av_class$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * const AVClass* av_class;
     * }
     */
    public static void av_class$set(MemorySegment seg, MemorySegment x) {
        AVStream.av_class$VH.set(seg, x);
    }
    public static MemorySegment av_class$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)AVStream.av_class$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void av_class$set(MemorySegment seg, long index, MemorySegment x) {
        AVStream.av_class$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle index$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("index"));
    public static VarHandle index$VH() {
        return AVStream.index$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * int index;
     * }
     */
    public static int index$get(MemorySegment seg) {
        return (int)AVStream.index$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * int index;
     * }
     */
    public static void index$set(MemorySegment seg, int x) {
        AVStream.index$VH.set(seg, x);
    }
    public static int index$get(MemorySegment seg, long index) {
        return (int)AVStream.index$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void index$set(MemorySegment seg, long index, int x) {
        AVStream.index$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle id$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("id"));
    public static VarHandle id$VH() {
        return AVStream.id$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * int id;
     * }
     */
    public static int id$get(MemorySegment seg) {
        return (int)AVStream.id$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * int id;
     * }
     */
    public static void id$set(MemorySegment seg, int x) {
        AVStream.id$VH.set(seg, x);
    }
    public static int id$get(MemorySegment seg, long index) {
        return (int)AVStream.id$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void id$set(MemorySegment seg, long index, int x) {
        AVStream.id$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle codecpar$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("codecpar"));
    public static VarHandle codecpar$VH() {
        return AVStream.codecpar$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * AVCodecParameters* codecpar;
     * }
     */
    public static MemorySegment codecpar$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)AVStream.codecpar$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * AVCodecParameters* codecpar;
     * }
     */
    public static void codecpar$set(MemorySegment seg, MemorySegment x) {
        AVStream.codecpar$VH.set(seg, x);
    }
    public static MemorySegment codecpar$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)AVStream.codecpar$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void codecpar$set(MemorySegment seg, long index, MemorySegment x) {
        AVStream.codecpar$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle priv_data$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("priv_data"));
    public static VarHandle priv_data$VH() {
        return AVStream.priv_data$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * void* priv_data;
     * }
     */
    public static MemorySegment priv_data$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)AVStream.priv_data$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * void* priv_data;
     * }
     */
    public static void priv_data$set(MemorySegment seg, MemorySegment x) {
        AVStream.priv_data$VH.set(seg, x);
    }
    public static MemorySegment priv_data$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)AVStream.priv_data$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void priv_data$set(MemorySegment seg, long index, MemorySegment x) {
        AVStream.priv_data$VH.set(seg.asSlice(index*sizeof()), x);
    }
    public static MemorySegment time_base$slice(MemorySegment seg) {
        return seg.asSlice(32, 8);
    }
    static final VarHandle start_time$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("start_time"));
    public static VarHandle start_time$VH() {
        return AVStream.start_time$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * int64_t start_time;
     * }
     */
    public static long start_time$get(MemorySegment seg) {
        return (long)AVStream.start_time$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * int64_t start_time;
     * }
     */
    public static void start_time$set(MemorySegment seg, long x) {
        AVStream.start_time$VH.set(seg, x);
    }
    public static long start_time$get(MemorySegment seg, long index) {
        return (long)AVStream.start_time$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void start_time$set(MemorySegment seg, long index, long x) {
        AVStream.start_time$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle duration$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("duration"));
    public static VarHandle duration$VH() {
        return AVStream.duration$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * int64_t duration;
     * }
     */
    public static long duration$get(MemorySegment seg) {
        return (long)AVStream.duration$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * int64_t duration;
     * }
     */
    public static void duration$set(MemorySegment seg, long x) {
        AVStream.duration$VH.set(seg, x);
    }
    public static long duration$get(MemorySegment seg, long index) {
        return (long)AVStream.duration$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void duration$set(MemorySegment seg, long index, long x) {
        AVStream.duration$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle nb_frames$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("nb_frames"));
    public static VarHandle nb_frames$VH() {
        return AVStream.nb_frames$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * int64_t nb_frames;
     * }
     */
    public static long nb_frames$get(MemorySegment seg) {
        return (long)AVStream.nb_frames$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * int64_t nb_frames;
     * }
     */
    public static void nb_frames$set(MemorySegment seg, long x) {
        AVStream.nb_frames$VH.set(seg, x);
    }
    public static long nb_frames$get(MemorySegment seg, long index) {
        return (long)AVStream.nb_frames$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void nb_frames$set(MemorySegment seg, long index, long x) {
        AVStream.nb_frames$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle disposition$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("disposition"));
    public static VarHandle disposition$VH() {
        return AVStream.disposition$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * int disposition;
     * }
     */
    public static int disposition$get(MemorySegment seg) {
        return (int)AVStream.disposition$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * int disposition;
     * }
     */
    public static void disposition$set(MemorySegment seg, int x) {
        AVStream.disposition$VH.set(seg, x);
    }
    public static int disposition$get(MemorySegment seg, long index) {
        return (int)AVStream.disposition$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void disposition$set(MemorySegment seg, long index, int x) {
        AVStream.disposition$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle discard$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("discard"));
    public static VarHandle discard$VH() {
        return AVStream.discard$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * enum AVDiscard discard;
     * }
     */
    public static int discard$get(MemorySegment seg) {
        return (int)AVStream.discard$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * enum AVDiscard discard;
     * }
     */
    public static void discard$set(MemorySegment seg, int x) {
        AVStream.discard$VH.set(seg, x);
    }
    public static int discard$get(MemorySegment seg, long index) {
        return (int)AVStream.discard$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void discard$set(MemorySegment seg, long index, int x) {
        AVStream.discard$VH.set(seg.asSlice(index*sizeof()), x);
    }
    public static MemorySegment sample_aspect_ratio$slice(MemorySegment seg) {
        return seg.asSlice(72, 8);
    }
    static final VarHandle metadata$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("metadata"));
    public static VarHandle metadata$VH() {
        return AVStream.metadata$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * AVDictionary* metadata;
     * }
     */
    public static MemorySegment metadata$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)AVStream.metadata$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * AVDictionary* metadata;
     * }
     */
    public static void metadata$set(MemorySegment seg, MemorySegment x) {
        AVStream.metadata$VH.set(seg, x);
    }
    public static MemorySegment metadata$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)AVStream.metadata$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void metadata$set(MemorySegment seg, long index, MemorySegment x) {
        AVStream.metadata$VH.set(seg.asSlice(index*sizeof()), x);
    }
    public static MemorySegment avg_frame_rate$slice(MemorySegment seg) {
        return seg.asSlice(88, 8);
    }
    public static MemorySegment attached_pic$slice(MemorySegment seg) {
        return seg.asSlice(96, 104);
    }
    static final VarHandle side_data$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("side_data"));
    public static VarHandle side_data$VH() {
        return AVStream.side_data$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * AVPacketSideData* side_data;
     * }
     */
    public static MemorySegment side_data$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)AVStream.side_data$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * AVPacketSideData* side_data;
     * }
     */
    public static void side_data$set(MemorySegment seg, MemorySegment x) {
        AVStream.side_data$VH.set(seg, x);
    }
    public static MemorySegment side_data$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)AVStream.side_data$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void side_data$set(MemorySegment seg, long index, MemorySegment x) {
        AVStream.side_data$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle nb_side_data$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("nb_side_data"));
    public static VarHandle nb_side_data$VH() {
        return AVStream.nb_side_data$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * int nb_side_data;
     * }
     */
    public static int nb_side_data$get(MemorySegment seg) {
        return (int)AVStream.nb_side_data$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * int nb_side_data;
     * }
     */
    public static void nb_side_data$set(MemorySegment seg, int x) {
        AVStream.nb_side_data$VH.set(seg, x);
    }
    public static int nb_side_data$get(MemorySegment seg, long index) {
        return (int)AVStream.nb_side_data$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void nb_side_data$set(MemorySegment seg, long index, int x) {
        AVStream.nb_side_data$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle event_flags$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("event_flags"));
    public static VarHandle event_flags$VH() {
        return AVStream.event_flags$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * int event_flags;
     * }
     */
    public static int event_flags$get(MemorySegment seg) {
        return (int)AVStream.event_flags$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * int event_flags;
     * }
     */
    public static void event_flags$set(MemorySegment seg, int x) {
        AVStream.event_flags$VH.set(seg, x);
    }
    public static int event_flags$get(MemorySegment seg, long index) {
        return (int)AVStream.event_flags$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void event_flags$set(MemorySegment seg, long index, int x) {
        AVStream.event_flags$VH.set(seg.asSlice(index*sizeof()), x);
    }
    public static MemorySegment r_frame_rate$slice(MemorySegment seg) {
        return seg.asSlice(216, 8);
    }
    static final VarHandle pts_wrap_bits$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("pts_wrap_bits"));
    public static VarHandle pts_wrap_bits$VH() {
        return AVStream.pts_wrap_bits$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * int pts_wrap_bits;
     * }
     */
    public static int pts_wrap_bits$get(MemorySegment seg) {
        return (int)AVStream.pts_wrap_bits$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * int pts_wrap_bits;
     * }
     */
    public static void pts_wrap_bits$set(MemorySegment seg, int x) {
        AVStream.pts_wrap_bits$VH.set(seg, x);
    }
    public static int pts_wrap_bits$get(MemorySegment seg, long index) {
        return (int)AVStream.pts_wrap_bits$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void pts_wrap_bits$set(MemorySegment seg, long index, int x) {
        AVStream.pts_wrap_bits$VH.set(seg.asSlice(index*sizeof()), x);
    }
    public static long sizeof() { return $LAYOUT().byteSize(); }
    public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
    public static MemorySegment allocateArray(long len, SegmentAllocator allocator) {
        return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
    }
    public static MemorySegment ofAddress(MemorySegment addr, SegmentScope scope) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, scope); }
}


