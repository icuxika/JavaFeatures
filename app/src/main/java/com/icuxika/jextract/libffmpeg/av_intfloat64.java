// Generated by jextract

package com.icuxika.jextract.libffmpeg;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
/**
 * {@snippet :
 * union av_intfloat64 {
 *     uint64_t i;
 *     double f;
 * };
 * }
 */
public class av_intfloat64 {

    static final UnionLayout $union$LAYOUT = MemoryLayout.unionLayout(
        Constants$root.C_LONG_LONG$LAYOUT.withName("i"),
        Constants$root.C_DOUBLE$LAYOUT.withName("f")
    ).withName("av_intfloat64");
    public static MemoryLayout $LAYOUT() {
        return av_intfloat64.$union$LAYOUT;
    }
    static final VarHandle i$VH = $union$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("i"));
    public static VarHandle i$VH() {
        return av_intfloat64.i$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * uint64_t i;
     * }
     */
    public static long i$get(MemorySegment seg) {
        return (long)av_intfloat64.i$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * uint64_t i;
     * }
     */
    public static void i$set(MemorySegment seg, long x) {
        av_intfloat64.i$VH.set(seg, x);
    }
    public static long i$get(MemorySegment seg, long index) {
        return (long)av_intfloat64.i$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void i$set(MemorySegment seg, long index, long x) {
        av_intfloat64.i$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle f$VH = $union$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("f"));
    public static VarHandle f$VH() {
        return av_intfloat64.f$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * double f;
     * }
     */
    public static double f$get(MemorySegment seg) {
        return (double)av_intfloat64.f$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * double f;
     * }
     */
    public static void f$set(MemorySegment seg, double x) {
        av_intfloat64.f$VH.set(seg, x);
    }
    public static double f$get(MemorySegment seg, long index) {
        return (double)av_intfloat64.f$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void f$set(MemorySegment seg, long index, double x) {
        av_intfloat64.f$VH.set(seg.asSlice(index*sizeof()), x);
    }
    public static long sizeof() { return $LAYOUT().byteSize(); }
    public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
    public static MemorySegment allocateArray(long len, SegmentAllocator allocator) {
        return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
    }
    public static MemorySegment ofAddress(MemorySegment addr, SegmentScope scope) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, scope); }
}


