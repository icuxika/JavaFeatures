// Generated by jextract

package com.icuxika.jextract.libffmpeg;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
final class constants$173 {

    // Suppresses default constructor, ensuring non-instantiability.
    private constants$173() {}
    static final FunctionDescriptor avio_read_dir$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle avio_read_dir$MH = RuntimeHelper.downcallHandle(
        "avio_read_dir",
        constants$173.avio_read_dir$FUNC
    );
    static final FunctionDescriptor avio_close_dir$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle avio_close_dir$MH = RuntimeHelper.downcallHandle(
        "avio_close_dir",
        constants$173.avio_close_dir$FUNC
    );
    static final FunctionDescriptor avio_free_directory_entry$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle avio_free_directory_entry$MH = RuntimeHelper.downcallHandle(
        "avio_free_directory_entry",
        constants$173.avio_free_directory_entry$FUNC
    );
    static final FunctionDescriptor avio_alloc_context$read_packet$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG$LAYOUT
    );
    static final FunctionDescriptor avio_alloc_context$read_packet_UP$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG$LAYOUT
    );
    static final MethodHandle avio_alloc_context$read_packet_UP$MH = RuntimeHelper.upcallHandle(avio_alloc_context$read_packet.class, "apply", constants$173.avio_alloc_context$read_packet_UP$FUNC);
    static final FunctionDescriptor avio_alloc_context$read_packet_DOWN$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG$LAYOUT
    );
    static final MethodHandle avio_alloc_context$read_packet_DOWN$MH = RuntimeHelper.downcallHandle(
        constants$173.avio_alloc_context$read_packet_DOWN$FUNC
    );
    static final FunctionDescriptor avio_alloc_context$write_packet$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG$LAYOUT
    );
    static final FunctionDescriptor avio_alloc_context$write_packet_UP$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG$LAYOUT
    );
    static final MethodHandle avio_alloc_context$write_packet_UP$MH = RuntimeHelper.upcallHandle(avio_alloc_context$write_packet.class, "apply", constants$173.avio_alloc_context$write_packet_UP$FUNC);
}


